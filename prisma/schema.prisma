// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator schemas {
  provider              = "zod-prisma"
  output                = "./schemas"
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  relationModel         = false
  imports               = "./zod-prisma-helpers"
  prismaJsonNullability = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sheet {
  updatedAt  DateTime    @updatedAt
  id         String      @id @default(cuid())
  name       String /// @zod.and(imports.nameField)
  characters Character[]
  items      Item[]
  partyMoney Float       @default(0)
}

model Character {
  id            String @id @default(cuid())
  name          String /// @zod.and(imports.nameField)
  carryCapacity Float  @default(0)
  money         Float  @default(0)

  carriedItems Item[]

  sheet   Sheet  @relation(fields: [sheetId], references: [id], onDelete: Cascade)
  sheetId String
}

model Item {
  id            String  @id @default(cuid())
  name          String /// @zod.and(imports.nameField)
  description   String?
  weight        Float? /// @zod.min(0)
  quantity      Float   @default(1) /// @zod.min(0)
  referenceLink String? // Usually a link to the rules for the item
  category      String? /// @zod.transform(val => val?.trim() || null)
  // transformation on category means an empty string, or a string
  // containing only whitespace, will be transformed to null
  value         Float? /// @zod.min(0)

  carriedByCharacter   Character? @relation(fields: [carriedByCharacterId], references: [id], onDelete: SetNull)
  carriedByCharacterId String?

  sheet   Sheet  @relation(fields: [sheetId], references: [id])
  sheetId String
}
